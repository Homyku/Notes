{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../server/server.component\";\nfunction ServersComponent_p_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"server created, server name is \", ctx_r0.serverName, \"\");\n  }\n}\nfunction ServersComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"no server created\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class ServersComponent {\n  constructor() {\n    this.allowNewServer = false;\n    this.serverCreation = 'No server was created';\n    this.serverName = 'test';\n    this.serverCreated = false;\n    setTimeout(() => {\n      this.allowNewServer = true;\n    }, 2000);\n  }\n  ngOnInit() {}\n  onCreateServer() {\n    this.serverCreated = true;\n    this.serverCreation = 'server was created. name is ' + this.serverName;\n  }\n  onUpdateServerName(event) {\n    this.serverName = event.target.value;\n  }\n}\nServersComponent.ɵfac = function ServersComponent_Factory(t) {\n  return new (t || ServersComponent)();\n};\nServersComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ServersComponent,\n  selectors: [[\"app-servers\"]],\n  decls: 11,\n  vars: 5,\n  consts: [[\"type\", \"text\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"], [4, \"ngIf\", \"ngIfElse\"], [\"noServer\", \"\"]],\n  template: function ServersComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"label\");\n      i0.ɵɵtext(1, \"Server Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"input\", 0);\n      i0.ɵɵlistener(\"ngModelChange\", function ServersComponent_Template_input_ngModelChange_2_listener($event) {\n        return ctx.serverName = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"h2\");\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function ServersComponent_Template_button_click_5_listener() {\n        return ctx.onCreateServer();\n      });\n      i0.ɵɵtext(6, \"Add server\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(7, ServersComponent_p_7_Template, 2, 1, \"p\", 2);\n      i0.ɵɵtemplate(8, ServersComponent_ng_template_8_Template, 2, 0, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelement(10, \"app-server\");\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(9);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.serverName);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.serverName);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", !ctx.allowNewServer);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.serverCreated)(\"ngIfElse\", _r1);\n    }\n  },\n  dependencies: [i1.NgIf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel, i3.ServerComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAiBCA,yBAAwC;IAAAA,YAA+C;IAAAA,iBAAI;;;;IAAnDA,eAA+C;IAA/CA,+EAA+C;;;;;IAGpFA,yBAAG;IAAAA,iCAAiB;IAAAA,iBAAI;;;ACX5B,OAAM,MAAOC,gBAAgB;EAM3BC;IALA,mBAAc,GAAG,KAAK;IACtB,mBAAc,GAAG,uBAAuB;IACxC,eAAU,GAAC,MAAM;IACjB,kBAAa,GAAG,KAAK;IAGnBC,UAAU,CAAC,MAAI;MACb,IAAI,CAACC,cAAc,GAAG,IAAI;IAC5B,CAAC,EAAC,IAAI,CAAC;EACT;EAEAC,QAAQ,IAER;EAEAC,cAAc;IACZ,IAAI,CAACC,aAAa,GAAG,IAAI;IACzB,IAAI,CAACC,cAAc,GAAG,8BAA8B,GAAG,IAAI,CAACC,UAAU;EACxE;EAEAC,kBAAkB,CAACC,KAAU;IAC3B,IAAI,CAACF,UAAU,GAAsBE,KAAK,CAACC,MAAO,CAACC,KAAK;EAE1D;;AAxBWZ,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAa;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDT7BlB,6BAAO;MAAAA,2BAAW;MAAAA,iBAAQ;MAKtBA,gCAGC;MADDA;QAAA;MAAA,EAAwB;MAFxBA,iBAGC;MACLA,0BAAI;MAAAA,YAAgB;MAAAA,iBAAK;MAEzBA,iCAE+B;MAA3BA;QAAA,OAASmB,oBAAgB;MAAA,EAAC;MAACnB,0BAAU;MAAAA,iBAAS;MAIjDA,6DAA2F;MAE3FA,kHAEa;MAEbA,8BAAyB;;;;MAhBtBA,eAAwB;MAAxBA,wCAAwB;MAExBA,eAAgB;MAAhBA,oCAAgB;MAGhBA,eAA4B;MAA5BA,8CAA4B;MAK3BA,eAAqB;MAArBA,wCAAqB","names":["i0","ServersComponent","constructor","setTimeout","allowNewServer","ngOnInit","onCreateServer","serverCreated","serverCreation","serverName","onUpdateServerName","event","target","value","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\ASUS\\Desktop\\KURS\\my-first\\src\\app\\servers\\servers.component.html","C:\\Users\\ASUS\\Desktop\\KURS\\my-first\\src\\app\\servers\\servers.component.ts"],"sourcesContent":["<label>Server Name</label>\r\n<!-- <input type=\"text\" \r\n    class=\"form-control\"\r\n    (input)=\"onUpdateServerName($event)\"> -->\r\n\r\n    <input type=\"text\" \r\n    class=\"form-control\"\r\n    [(ngModel)]=\"serverName\"\r\n    >\r\n<h2>{{ serverName }}</h2>\r\n\r\n<button class=\"btn btn-primary\" \r\n    [disabled]=\"!allowNewServer\"\r\n    (click)=\"onCreateServer()\">Add server</button>\r\n\r\n<!-- <p>{{ serverCreation }}</p>\r\n -->\r\n <p *ngIf=\"serverCreated; else noServer\">server created, server name is {{ serverName }}</p>\r\n \r\n <ng-template #noServer>\r\n    <p>no server created</p>\r\n</ng-template>\r\n\r\n <app-server></app-server>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-servers',\n  /* template: `\n  <app-server></app-server>`, */\n  templateUrl: './servers.component.html',\n  styleUrls: ['./servers.component.css']\n})\nexport class ServersComponent implements OnInit{\n  allowNewServer = false;\n  serverCreation = 'No server was created';\n  serverName='test';\n  serverCreated = false;\n\n  constructor() {\n    setTimeout(()=> {\n      this.allowNewServer = true;\n    },2000);\n  }\n\n  ngOnInit() {\n      \n  }\n\n  onCreateServer(){\n    this.serverCreated = true;\n    this.serverCreation = 'server was created. name is ' + this.serverName;\n  }\n\n  onUpdateServerName(event: any){\n    this.serverName = (<HTMLInputElement>event.target).value;\n\n  }\n\n}\n "]},"metadata":{},"sourceType":"module","externalDependencies":[]}